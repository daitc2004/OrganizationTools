{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "PermittedRegions",
            "Effect": "Deny",
            "Action": "*",
            "Resource": "*",
            "Condition": {
                "StringNotEquals": {
                  "aws:RequestedRegion": [
                      "us-east-1", 
                      "ap-southeast-1"
                  ]
                }
            }
        },


        {
            "Sid":"IAMRead",
            "Effect":"Allow",
            "Action":[
                "iam:Get*",
                "iam:List*"
            ],
            "Resource":[
                "*"
            ]
        },
        {
            "Sid": "IAMWrite",
            "Effect": "Allow",
            "Action": [
                "iam:AddRoleToInstanceProfile",
                "iam:RemoveRoleFromInstanceProfile",
                "iam:CreateRole",
                "iam:CreateInstanceProfile",
                "iam:DeleteInstanceProfile",
                "iam:PassRole",
                "iam:AddRoleToInstanceProfile",
                "iam:CreateServiceLinkedRole",
                "iam:DeleteServiceLinkedRole",
                "iam:GetServiceLinkedRoleDeletionStatus",
                "iam:PutRolePolicy",
                "iam:UpdateRoleDescription",
                "iam:DeleteRole",
                "iam:DetachRolePolicy"
            ],
            "Resource": [
                "*"
            ]
        },
        {
            "Sid": "IAMWriteControlled",
            "Effect": "Allow",
            "Action": [
              "iam:AttachRolePolicy"
            ],
            "Resource": [
              "arn:aws:iam::*:role/*"
            ],
            "Condition": {"ArnEquals": 
              {
                  "iam:PolicyARN": [
                  "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess",
                  "arn:aws:iam::aws:policy/AmazonEC2ContainerServiceFullAccess",
                  "arn:aws:iam::aws:policy/service-role/*",
                  "arn:aws:iam::aws:policy/aws-service-role/*",
                  "arn:aws:iam::aws:policy/AmazonECS_FullAccess",
                  "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM"
                  ]
                }
            }
        },
        {
            "Sid": "IAMWriteControlled2",
            "Effect": "Deny",
            "Action": [
              "iam:DeleteRole",
              "iam:DetachRolePolicy"
            ],
            "Resource": [
              "arn:aws:iam::*:role/NinjaOrgAdminRole",
              "arn:aws:iam::*:role/aws-service-role/trustedadvisor.amazonaws.com/AWSServiceRoleForTrustedAdvisor",
              "arn:aws:iam::*:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport",
              "arn:aws:iam::*:role/aws-service-role/organizations.amazonaws.com/AWSServiceRoleForOrganizations"
            ]
                
        },
        
        {
            "Sid": "StarInclusions",
            "Effect": "Allow",
            "Action": [
                "aws-portal:ViewAccount",
                "cloudformation:*",
                "cloudwatch:*",
                "events:*",
                "logs:*",
                "ecr:*",
                "ecs:*",
                "kms:*",
                "sts:*",
                "route53:Get*",
                "route53:List*",
                "trustedadvisor:*",
                "config:*",
                "application-autoscaling:*",
                "discovery:*",
                "elasticloadbalancing:*",
                "route53:*",
                "servicediscovery:*"
            ],
            "Resource": [
                "*"
            ]
        },
      
        {
            "Sid": "CloudFormationRequirements",
            "Effect": "Allow",
            "Action": [
                "SNS:ListTopics",
                "s3:CreateBucket",
                "s3:PutObject",
                "s3:GetObject",
                "s3:DeleteObject",
                "s3:DeleteBucket"
            ],
            "Resource": [
                "*"
            ]
        },

        {
            "Sid": "Ec2DescribeAll",
            "Effect": "Allow",
            "Action": [
                "ec2:Describe*"
            ],
            "Resource": "*"
        },
        {
            "Sid": "EC2",
            "Effect": "Allow",
            "Action": [
                "ec2:*KeyPair",
                "ec2:*Volume",

                "ec2:*Tags",

                "ec2:AssociateIamInstanceProfile",
                "ec2:DisassociateIamInstanceProfile",
                "ec2:ReplaceIamInstanceProfileAssociation",
                "ec2:GetConsoleOutput",
                "ec2:GetConsoleScreenshot",
                "ec2:GetPasswordData",
                "ec2:ModifyInstanceAttribute",
                "ec2:ModifyVolume",
                "ec2:ModifyVolumeAttribute",
                "ec2:MonitorInstances",
                "ec2:RebootInstances",
                "ec2:ReportInstanceStatus",

                "ec2:StopInstances",
                "ec2:TerminateInstances",

                "ec2:*VpcCidrBlock",
                "ec2:CreateVpc",
                "ec2:DeleteVpc",
                "ec2:ModifyVpcAttribute",

                "ec2:*PrivateIpAddresses",

                "ec2:*Address",

                "ec2:*InternetGateway",

                "ec2:*RouteTable*",

                "ec2:*SubnetCidrBlock",
                "ec2:*Subnet",
                "ec2:*SubnetAttribute",

                "ec2:*NetworkInterface*",

                "ec2:*NetworkAcl*",

                "ec2:*SecurityGroup*"

            ],
            "Resource": [
                "*"
            ]
        }

,
        {
            "Sid": "LimitInstanceSize",
            "Effect": "Allow",
            "Action": [
                "ec2:RunInstances",
                "ec2:StartInstances"
            ],
            "Resource": "arn:aws:ec2:*:*:instance/*",
            "Condition": {
                "ForAnyValue:StringEqualsIgnoreCase": {
                    "ec2:InstanceType": [
                        "*.nano",
                        "*.micro",
                        "*.small",
                        "*.medium",
                        "*.large"
                    ]
                }
            }
        }
,
        {
            "Sid": "LimitInstanceSizeMiscResources",
            "Effect": "Allow",
            "Action": [
                "ec2:RunInstances",
                "ec2:StartInstances"
            ],
            "Resource":[ 
                "arn:aws:ec2:*:*:volume/*",
                "arn:aws:ec2:*:*:key-pair/*",
                "arn:aws:ec2:*:*:security-group/*",
                "arn:aws:ec2:*:*:snapshot/*",
                "arn:aws:ec2:*:*:placement-group/*",
                "arn:aws:ec2:*:*:image/*",
                "arn:aws:ec2:*:*:network-interface/*",
                "arn:aws:ec2:*:*:subnet/*",
                "arn:aws:ec2:*:*:launch-template/*"
                ] 
        }
,
        {
            "Sid": "Autoscaling",
            "Effect": "Allow",
            "Action": [
                "autoscaling:Attach*",
                "autoscaling:Batch*",
                "autoscaling:CompleteLifecycleAction",
                "autoscaling:CreateOrUpdateTags",
                "autoscaling:Delete*",
                "autoscaling:Describe*",
                "autoscaling:Detach*",
                "autoscaling:DisableMetricsCollection",
                "autoscaling:EnableMetricsCollection",
                "autoscaling:EnterStandby",
                "autoscaling:ExecutePolicy",
                "autoscaling:ExitStandby",
                "autoscaling:PutLifecycleHook",
                "autoscaling:PutNotificationConfiguration",
                "autoscaling:PutScalingPolicy",
                "autoscaling:RecordLifecycleActionHeartbeat",
                "autoscaling:ResumeProcesses",
                "autoscaling:SetDesiredCapacity",
                "autoscaling:SetInstanceHealth",
                "autoscaling:SetInstanceProtection",
                "autoscaling:SuspendProcesses",
                "autoscaling:TerminateInstanceInAutoScalingGroup"
            ],
            "Resource": [
                "*"
            ]
        },
        {
            "Sid": "MaxSize",
            "Effect": "Allow",
            "Action":[
                "autoscaling:CreateAutoScalingGroup",
                "autoscaling:PutScheduledUpdateGroupAction",
                "autoscaling:UpdateAutoScalingGroup"
            ],
            "Resource":[
                "*"
            ],
            "Condition" :{
                "NumericLessThanEquals": {"autoscaling:MaxSize": "4"}
            }
        },
        {
            "Sid": "CreateLaunchConfiguration",
            "Effect": "Allow",
            "Action": "autoscaling:CreateLaunchConfiguration",
            "Resource": [
                "arn:aws:autoscaling:*:*:launchConfiguration:*:*"
     
            ],
            "Condition": {
                "ForAnyValue:StringEqualsIgnoreCase": {
                    "autoscaling:InstanceType": [
                        "*.nano",
                        "*.micro",
                        "*.small",
                        "*.medium",
                        "*.large"
                    ]
                }

 
            }
         }

    ]
}
 