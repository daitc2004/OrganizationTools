{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid":"IAMRead",
            "Effect":"Allow",
            "Action":[
                "iam:Get*",
                "iam:List*"
            ],
            "Resource":[
                "*"
            ]
        },
        {
            "Sid": "IAMWrite",
            "Effect": "Allow",
            "Action": [
                "iam:AddRoleToInstanceProfile",
                "iam:RemoveRoleFromInstanceProfile",
                "iam:CreateRole",
                "iam:CreateInstanceProfile",
                "iam:DeleteInstanceProfile",
                "iam:PassRole",
                "iam:AddRoleToInstanceProfile",
                "iam:CreateServiceLinkedRole",
                "iam:DeleteServiceLinkedRole",
                "iam:GetServiceLinkedRoleDeletionStatus",
                "iam:PutRolePolicy",
                "iam:UpdateRoleDescription",
                "iam:DeleteRole",
                "iam:DetachRolePolicy"
            ],
            "Resource": [
                "*"
            ]
        },
        {
            "Sid": "IAMWriteControlled",
            "Effect": "Allow",
            "Action": [
              "iam:AttachRolePolicy"
            ],
            "Resource": [
              "arn:aws:iam::*:role/*"
            ],
            "Condition": {"ArnEquals": 
              {
                  "iam:PolicyARN": [
                  "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess",
                  "arn:aws:iam::aws:policy/AmazonEC2ContainerServiceFullAccess",
                  "arn:aws:iam::aws:policy/service-role/*",
                  "arn:aws:iam::aws:policy/aws-service-role/*",
                  "arn:aws:iam::aws:policy/AmazonECS_FullAccess",
                  "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM"
                  ]
                }
            }
        },
        {
            "Sid": "IAMWriteControlled2",
            "Effect": "Deny",
            "Action": [
              "iam:DeleteRole",
              "iam:DetachRolePolicy"
            ],
            "Resource": [
              "arn:aws:iam::*:role/NinjaOrgAdminRole",
              "arn:aws:iam::*:role/aws-service-role/trustedadvisor.amazonaws.com/AWSServiceRoleForTrustedAdvisor",
              "arn:aws:iam::*:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport",
              "arn:aws:iam::*:role/aws-service-role/organizations.amazonaws.com/AWSServiceRoleForOrganizations"
            ]
                
        },
        
        {
            "Sid": "StarInclusions",
            "Effect": "Allow",
            "Action": [
                "aws-portal:ViewAccount",
                "cloudformation:*",
                "cloudwatch:*",
                "events:*",
                "logs:*",
                "ecr:*",
                "ecs:*",
                "kms:*",
                "sts:*",
                "route53:Get*",
                "route53:List*",
                "trustedadvisor:*",
                "config:*",
                "application-autoscaling:*",
                "discovery:*",
                "elasticloadbalancing:*",
                "route53:*",
                "servicediscovery:*"
            ],
            "Resource": [
                "*"
            ],
            "Condition": {"StringEquals": {"aws:RequestedRegion": "ap-southeast-1"}}
        },
      
        {
            "Sid": "CloudFormationRequirements",
            "Effect": "Allow",
            "Action": [
                "SNS:ListTopics",
                "s3:CreateBucket",
                "s3:PutObject",
                "s3:GetObject",
                "s3:DeleteObject",
                "s3:DeleteBucket"
            ],
            "Resource": [
                "*"
            ],
            "Condition": {"StringEquals": {"aws:RequestedRegion": "ap-southeast-1"}}
        },

        {
            "Sid": "Ec2DescribeAll",
            "Effect": "Allow",
            "Action": [
                "ec2:Describe*"
            ],
            "Resource": "*"
        },
        {
            "Sid": "EC2",
            "Effect": "Allow",
            "Action": [
                "ec2:CreateKeyPair",
                "ec2:DeleteKeyPair",
                "ec2:CreateVolume",
                "ec2:DeleteVolume",
                "ec2:AttachVolume",
                "ec2:DetachVolume",

                "ec2:CreateTags",
                "ec2:DeleteTags",

                "ec2:AssociateIamInstanceProfile",
                "ec2:DisassociateIamInstanceProfile",
                "ec2:ReplaceIamInstanceProfileAssociation",
                "ec2:GetConsoleOutput",
                "ec2:GetConsoleScreenshot",
                "ec2:GetPasswordData",
                "ec2:ModifyInstanceAttribute",
                "ec2:ModifyVolume",
                "ec2:ModifyVolumeAttribute",
                "ec2:MonitorInstances",
                "ec2:RebootInstances",
                "ec2:ReportInstanceStatus",

                "ec2:StopInstances",
                "ec2:TerminateInstances",

                "ec2:AssociateVpcCidrBlock",
                "ec2:DisassociateVpcCidrBlock",
                "ec2:CreateVpc",
                "ec2:DeleteVpc",
                "ec2:ModifyVpcAttribute",

                "ec2:AssignPrivateIpAddresses",
                "ec2:UnassignPrivateIpAddresses",

                "ec2:AllocateAddress",
                "ec2:AssociateAddress",
                "ec2:DisassociateAddress",
                "ec2:ReleaseAddress",

                "ec2:AttachInternetGateway",
                "ec2:DeleteInternetGateway",
                "ec2:CreateInternetGateway",
                "ec2:DetachInternetGateway",

                "ec2:AssociateRouteTable",
                "ec2:CreateRoute",
                "ec2:CreateRouteTable",
                "ec2:DeleteRoute",
                "ec2:DeleteRouteTable",
                "ec2:ReplaceRoute",
                "ec2:ReplaceRouteTableAssociation",
                "ec2:DisassociateRouteTable",

                "ec2:AssociateSubnetCidrBlock",
                "ec2:DisassociateSubnetCidrBlock",
                "ec2:CreateSubnet",
                "ec2:DeleteSubnet",
                "ec2:ModifySubnetAttribute",

                "ec2:AttachNetworkInterface",
                "ec2:DetachNetworkInterface",
                "ec2:CreateNetworkInterface",
                "ec2:DeleteNetworkInterface",
                "ec2:CreateNetworkInterface",
                "ec2:DeleteNetworkInterface",
                "ec2:AttachNetworkInterface",
                "ec2:DetachNetworkInterface",
                "ec2:CreateNetworkInterfacePermission",
                "ec2:DeleteNetworkInterfacePermission",
                "ec2:ModifyNetworkInterfaceAttribute",
                "ec2:ResetNetworkInterfaceAttribute",

                "ec2:CreateNetworkAcl",
                "ec2:DeleteNetworkAcl",
                "ec2:CreateNetworkAclEntry",
                "ec2:DeleteNetworkAclEntry",
                "ec2:ReplaceNetworkAclEntry",
                "ec2:ReplaceNetworkAclAssociation",

                "ec2:CreateSecurityGroup",
                "ec2:DeleteSecurityGroup",
                "ec2:AuthorizeSecurityGroupEgress",
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
                "ec2:UpdateSecurityGroupRuleDescriptionsIngress",
                "ec2:RevokeSecurityGroupEgress",
                "ec2:RevokeSecurityGroupIngress"
            ],
            "Resource": [
                "*"
            ],
            "Condition": {
                "StringEquals": {
                "aws:RequestedRegion": "ap-southeast-1"
                }
            }
        }

    ]
}
 